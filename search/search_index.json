{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Ansible Docs","text":"<p>I\u2019m just a guy trying to learn Ansible. I started using git to keep my control server up to date, and, well, one thing led to another.</p> <p>That\u2019s besides the point. We\u2019re here now, let\u2019s make the best of things. </p> <p>Take a look at the Quick Start guide to get up and running on a fresh system. </p> <p>Otherwise, feel free to review any of the reference material in these docs.</p> <p>Take a look at the playbooks and modify to your own needs. </p>"},{"location":"quick-start/","title":"Quick Start","text":"<p>The steps below will get a fresh system up and running with ansible quickly.</p>"},{"location":"quick-start/#install-ansible","title":"Install ansible","text":"<p>If you haven\u2019t already<sup>1</sup>.</p> <pre><code>sudo apt install ansible\n</code></pre>"},{"location":"quick-start/#change-user","title":"Change user","text":"<p>You\u2019ll want an account that can run python and ssh out. It\u2019s best to have a dedicated user.<sup>2</sup></p> <p>(I like <code>ansible</code> as a user.)</p> <pre><code>su ansible\n</code></pre>"},{"location":"quick-start/#download-this-repository","title":"Download this repository","text":"<pre><code>cd ~/\ngit clone https://github.com/mfeuhrer/ansible.git\n</code></pre>"},{"location":"quick-start/#create-an-ssh-keypair","title":"Create an SSH keypair","text":"<p>if you don\u2019t already have one.<sup>3</sup></p> <pre><code>ssh-keygen\n</code></pre> <p>Copy it to <code>authorized_keys</code> in the resources directory:</p> <pre><code>echo ~/.ssh/id_rsa.pub &gt; ~/ansible/resources/.ssh/authorized_keys\n</code></pre>"},{"location":"quick-start/#create-an-inventory-file","title":"Create an inventory file","text":"<p>using the supported tags found in the docs folder.</p> <pre><code>nano ~/hosts\n</code></pre>"},{"location":"quick-start/#ansiblecfg","title":"Ansible.cfg","text":"<p>Copy (or simlink) ansible.cfg from the resources folder to your ansible user\u2019s home folder.</p> <pre><code>cp ~/ansible/resources/ansible/ansible.cfg ~/ansible.cfg\n</code></pre> <p>or</p> <pre><code>ln -s ~/ansible/resources/ansible/ansible.cfg ~/ansible.cfg\n</code></pre>"},{"location":"quick-start/#test-connections","title":"Test Connections","text":"<p>You are now ready to run playbooks. Try the following command to validate connectivity to your hosts.</p> <pre><code>ansible all -m ping\n</code></pre> <ol> <li> <p>Obviously I prefer debian based systems.\u00a0\u21a9</p> </li> <li> <p>If you don\u2019t already have an account for this, one of my playbooks is an example of creating a user account at scale. You could use that playbook and target only your ansible host to create the user.\u00a0\u21a9</p> </li> <li> <p>If you\u2019re me, you\u2019ll use the existing keypair. Conveniently the correct authorized_keys is already in this repo!\u00a0\u21a9</p> </li> </ol>"},{"location":"playbooks/apt-common/","title":"Common configuration for apt based systems","text":"<p>This is the main configuration for baseline desired state on apt based linux.</p>"},{"location":"playbooks/apt-common/#quick-run","title":"Quick run","text":"<pre><code>ansible-playbook ansible/playbooks/apt-common.yml\n</code></pre>"},{"location":"playbooks/apt-common/#current-tasks","title":"Current Tasks","text":"<ul> <li>Install packages<ul> <li>apt-transport-https</li> <li>ca-certificates</li> <li>curl</li> <li>gnupg</li> <li>software-properties-common</li> <li>ufw</li> <li>snmpd</li> <li>htop</li> <li>git</li> </ul> </li> <li>Remove packages<ul> <li>netadata</li> <li>wazuh-agent</li> <li>landscape-client</li> </ul> </li> <li>Configure SNMP<ul> <li>Install extra monitoring modules for librenms</li> </ul> </li> </ul>"},{"location":"playbooks/apt-containerhosts/","title":"Configuration for apt based container hosts","text":""},{"location":"playbooks/apt-containerhosts/#quick-run","title":"Quick run","text":"<pre><code>ansible-playbook ansible/playbooks/apt-containerhosts.yml\n</code></pre>"},{"location":"playbooks/apt-containerhosts/#current-tasks","title":"Current tasks","text":"<ul> <li>Install distribution accurate official Docker repository gpg key</li> <li>Configure distribution accurate official Docker repo</li> <li>Install packages<ul> <li>python3</li> <li>python3-pip</li> <li>python3-dateutil</li> <li>python3-docker</li> <li>docker-ce</li> </ul> </li> <li>Configure docker SNMP modules</li> <li>Restart SNMP</li> </ul>"},{"location":"playbooks/apt-proxguest/","title":"Configuration for apt based proxmox guests","text":"<p>This playbook is meant to be run against apt based proxmox guest virtual machines. </p> <p>Untested (and likely not needed) for lxc containers.</p>"},{"location":"playbooks/apt-proxguest/#quick-run","title":"Quick run","text":"<pre><code>ansible-playbook ansible/playbooks/apt-proxguest.yml\n</code></pre>"},{"location":"playbooks/apt-proxguest/#current-tasks","title":"Current Tasks","text":"<ul> <li>Installs and starts qemu-guest-agent service</li> <li>Removes open-vm-tools if found</li> </ul>"},{"location":"playbooks/linux-common/","title":"Common linux configurations","text":"<p>This playbook is only designed to set configuration items that are applicable to any linux system.</p>"},{"location":"playbooks/linux-common/#quick-run","title":"Quick run","text":"<pre><code>ansible-playbook ansible/playbooks/linux-common.yml\n</code></pre>"},{"location":"playbooks/linux-common/#current-tasks","title":"Current Tasks","text":"<ul> <li>Set hostname based on inventory hostname</li> <li>Create ansible user account<ul> <li>Grant passwordless sudo access</li> <li>Ensure ssh public key is current</li> </ul> </li> <li>Create warpgate user account<ul> <li>Ensure ssh public key is current</li> </ul> </li> </ul>"},{"location":"playbooks/linux-updates/","title":"Linux package updates","text":"<p>This playbook targets both apt and yum based distributions.</p>"},{"location":"playbooks/linux-updates/#quick-run","title":"Quick run","text":"<pre><code>ansible-playbook ansible/playbooks/apt-common.yml\n</code></pre>"},{"location":"playbooks/linux-updates/#current-tasks","title":"Current tasks","text":"<ul> <li>Search for available updates</li> <li>Apply available updates</li> <li>Run package manager autoremove</li> <li>Reboot endpoints<sup>1</sup></li> </ul> <ol> <li> <p>If any of the updates require a reboot, the endpoint will reboot, unless the host belongs to the inventory group <code>always on</code>.\u00a0\u21a9</p> </li> </ol>"},{"location":"reference/ansible.cfg/","title":"Ansible Configuration","text":"<p>Nothing too complicated here. Example config found here. You\u2019ll want to make sure this file is in your ansible user\u2019s home directory.</p>"},{"location":"reference/ansible.cfg/#customizations","title":"Customizations","text":"<p>If you use a different username for ansible, change this line:</p> <pre><code>remote_user = ansible\n</code></pre> <p>Modify this line to change where your inventory file can be found:</p> <pre><code>inventory = $HOME/hosts\n</code></pre>"},{"location":"reference/ansible.cfg/#options","title":"Options","text":""},{"location":"reference/ansible.cfg/#python-interpreter","title":"python interpreter","text":"<pre><code>interpreter_python = auto_silent\n</code></pre> <p>By default, ansible will autodetect the in-user versions of python on managed devices. If no version is specified for use, ansible will throw a warning in the logs that the interpreter on the endpoint may change between runs. I don\u2019t care for the clutter in my logs. </p>"},{"location":"reference/inventory/","title":"The Inventory","text":""},{"location":"reference/inventory/#groups","title":"Groups","text":"<p>In my playbooks, I try to target groups over individual hosts. This helps keep the playbooks flexible and scalable. </p> <p>This section aims to specify what groups I work with, and what the intent behind them is.</p>"},{"location":"reference/inventory/#linux","title":"<code>[linux]</code>","text":"<p>The linux tag is a parent group that contains any valid linux architechtures, organized by package manager. </p> <p>Playbooks that target this group should only reference common linux tasks, and should not expect any distro-specific software.</p> <p>This is useful for tasks like adding users. </p> <p>Currently defined as:</p> <pre><code>[linux:children]\napt\nyum\n</code></pre>"},{"location":"reference/inventory/#apt","title":"<code>[apt]</code>","text":"<p>The apt tag is a group that contains valid Operating Systems that use apt as a package manager. </p> <p>Playbooks that target this group should expect common apt functions, runtimes, and commands to be available. </p> <p>Useful for installing packages and controlling repositories. </p> <p>Currently defined as:</p> <pre><code>[apt:children]\nubuntu\ndebian\nubuntu_lxc\n</code></pre>"},{"location":"reference/inventory/#proxmoxguest","title":"<code>[proxmoxguest]</code>","text":"<p>This group contains linux virtual machines running on proxmox hosts. There is probably a better way to target these devices however.</p> <p>Playbooks targeting this group can expect a virtual machine (not an lxc) running on a proxmox hypervisor.</p> <p>Useful for things like ensuring <code>qemu-guest-agent</code> is installed and running. </p> <p>Currently defined as:</p> <pre><code>[proxmoxguest:children]\nmox\nkubeservers\n</code></pre>"},{"location":"reference/inventory/#containerhosts","title":"<code>[containerhosts]</code>","text":"<p>The containerhosts group contains groups of machines that use common docker components. </p> <p>Playbooks that target this group should expect a working Docker installation.</p> <p>Useful for making sure <code>docker</code> components are ready for monitoring.</p> <p>Currently defined as:</p> <pre><code>[containerhosts:children]\ndocker\nkubeservers\n</code></pre>"},{"location":"reference/inventory/#specific-distros","title":"Specific Distros","text":"<p>ex:<code>[Debian]</code>, <code>[Ubuntu]</code>, <code>[ubuntu_lxc]</code></p> <p>A tag for a specific distribution is a group that contains only hosts running that distribution. </p> <p>Playbooks that target a specific distro group should expect the receiving device to be running that flavor of linux.  e.g. referencing the <code>ubuntu</code> group should result in a list that contains only Ubuntu devices.</p> <p>These groups are currently populated directly with hostnames.</p>"},{"location":"reference/inventory/#specific-softwares","title":"Specific Softwares","text":"<p>ex: <code>[borgbackup]</code>, <code>[npm]</code>, <code>[docker]</code></p> <p>Tags for specific software will install and manage that software on any endpoints defined.</p> <p>Playbooks that target these groups should expect the software to be installed (or should be doing the installing).</p> <p>These groups are currently populated directly with hostnames.</p>"},{"location":"reference/inventory/#alwayson","title":"<code>[alwayson]</code>","text":"<p>Hosts defined under this group are expected to not reboot during regular maintenance jobs. </p> <p>Mostly a trust thing. </p> <p>Useful for applying patches and controlling reboots.</p>"}]}